local Usernames = loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/Access/VexHub/Usernames"))()
local Player = game:GetService("Players").LocalPlayer
local Authorized = false
local Errors = 0
local Message = loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/On-Discord/Created/VexConsole"))()
Message:Visible(true)

local function CheckIfSuccess(Success, Error)
	if Success then
		Message:Success("Loaded!")
	else
		Message:Error("Something went wrong while executing VexHub!")
		Message:Error(Error)
		Errors += 1
	end
end

for Names, _ in Usernames do
	if Player.Name == Names then
		Authorized = true
		local TweenService = game:GetService("TweenService")
		Message:Output("Loading Table...")
		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/Table"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Manipulating Table...")

		local Success, Error = pcall(function()
			getgenv().MakeVexFolder = function()
				local JSon = {}
				function JSon:Encode(Table)
					return game:GetService("HttpService"):JSONEncode(Table)
				end

				function JSon:Decode(Table)
					return game:GetService("HttpService"):JSONDecode(Table)
				end

				if isfolder("VexHub") then
					delfolder("VexHub")
				end

				makefolder("VexHub")
				makefolder("VexHub/Plugins")
				makefolder("VexHub/SavedScripts")

				local SettingsTable = {
					Wallpaper = 11926598891,
					Notifications = true,
					GuiBackgroundColor = "255, 255, 255",
					GuiScale = 1,
					AnimationSpeed = 0.6,
					EasingStyle = "Quart",
					GuiFont = {
						Regular = "Montserrat",
						Medium = "MontserratMedium",
						Bold = "MontserratBold",
					},
					BackgroundGradientColor = "200, 200, 200",
					UIStrokeColor = "255, 255, 255",
					NotificationSound = 3398620867,
					NotificationVolume = 0.5,
				}

				writefile("VexHub/Settings.vex", JSon:Encode(SettingsTable))

				local FavoritesTable = {}

				writefile("VexHub/Favorites.vex", JSon:Encode(FavoritesTable))
			end

			getgenv().LoadVexFile = function()
				local Success, Error = pcall(function()
					local JSon = {}
					local GuiSettings = _G.Table.GuiSettings
					local Plugins = _G.Table.Plugins
					local SavedScripts = _G.Table.SavedScripts
					local Favorites = _G.Table.Favorites

					function JSon:Encode(Table)
						return game:GetService("HttpService"):JSONEncode(Table)
					end

					function JSon:Decode(Table)
						return game:GetService("HttpService"):JSONDecode(Table)
					end

					if isfolder("VexHub") then
						coroutine.wrap(function()
							if isfile("VexHub/Settings.vex") then
								local SettingsTable = JSon:Decode(readfile("VexHub/Settings.vex"))

								GuiSettings.Wallpaper = SettingsTable.Wallpaper
								GuiSettings.Notifications = SettingsTable.Notifications
								GuiSettings.GuiBackgroundColor = SettingsTable.GuiBackgroundColor
								GuiSettings.GuiScale = SettingsTable.GuiScale
								GuiSettings.AnimationSpeed = SettingsTable.AnimationSpeed
								GuiSettings.EasingStyle = SettingsTable.EasingStyle
								GuiSettings.GuiFont.Regular = SettingsTable.GuiFont.Regular
								GuiSettings.GuiFont.Medium = SettingsTable.GuiFont.Medium
								GuiSettings.GuiFont.Bold = SettingsTable.GuiFont.Bold
								GuiSettings.BackgroundGradientColor = SettingsTable.BackgroundGradientColor
								GuiSettings.UIStrokeColor = SettingsTable.UIStrokeColor
								GuiSettings.NotificationSound = SettingsTable.NotificationSound
								GuiSettings.NotificationVolume = SettingsTable.NotificationVolume
							else
								MakeVexFolder()
							end
						end)()

						coroutine.wrap(function()
							if isfile("VexHub/Favorites.vex") then
								local FavoritesTable = JSon:Decode(readfile("VexHub/Favorites.vex"))
	
								for _, ScriptId in FavoritesTable do
									table.insert(Favorites, ScriptId)
								end
							else
								MakeVexFolder()
							end
						end)()

						coroutine.wrap(function()
							if isfolder("VexHub/Plugins") then
								for _, PluginName in listfiles("VexHub/Plugins") do
									if string.find(string.lower(tostring(PluginName)), ".vexp") then
										local PluginContents = loadstring(readfile(PluginName))()
										table.insert(Plugins, PluginContents)
									end
								end
							else
								MakeVexFolder()
							end
						end)()

						coroutine.wrap(function()
							if isfolder("VexHub/SavedScripts") then
								for _, ScriptName in listfiles("VexHub/SavedScripts") do
									if string.find(string.lower(tostring(ScriptName)), ".lua") then
										local function IgnorePathAndExtension(String)
											local _1 = string.gsub(String, "VexHub/SavedScripts/", "")
											return string.gsub(_1, ".lua", "")
										end

										local ScriptTable = {
											ScriptName = IgnorePathAndExtension(ScriptName),
											Script = tostring(readfile(ScriptName)),
										}

										table.insert(SavedScripts, ScriptTable)
									end
								end
							else
								MakeVexFolder()
							end
						end)()
					else
						MakeVexFolder()
						LoadVexFile()
					end
				end)

				if Success then
					Message:Success("Table manipulated!")
				else
					Message:Visible(true)
					Message:Error("Failed to manipulate table! Your settings was not loaded!")
					Message:Error(Error)
				end
			end

			getgenv().SaveVexFile = function()
				local Success, Error = pcall(function()
					local JSon = {}
					local GuiSettings = _G.Table.GuiSettings
					local Plugins = _G.Table.Plugins
					local SavedScripts = _G.Table.SavedScripts
					local Favorites = _G.Table.Favorites

					function JSon:Encode(Table)
						return game:GetService("HttpService"):JSONEncode(Table)
					end

					function JSon:Decode(Table)
						return game:GetService("HttpService"):JSONDecode(Table)
					end

					if isfolder("VexHub") then
						coroutine.wrap(function()
							if isfile("VexHub/Settings.vex") then
								local SettingsTable = {
									Wallpaper = GuiSettings.Wallpaper,
									Notifications = GuiSettings.Notifications,
									GuiBackgroundColor = GuiSettings.GuiBackgroundColor,
									GuiScale = GuiSettings.GuiScale,
									AnimationSpeed = GuiSettings.AnimationSpeed,
									EasingStyle = GuiSettings.EasingStyle,
									GuiFont = {
										Regular = GuiSettings.GuiFont.Regular,
										Medium = GuiSettings.GuiFont.Medium,
										Bold = GuiSettings.GuiFont.Bold,
									},
									BackgroundGradientColor = GuiSettings.BackgroundGradientColor,
									UIStrokeColor = GuiSettings.UIStrokeColor,
									NotificationSound = GuiSettings.NotificationSound,
									NotificationVolume = GuiSettings.NotificationVolume,
								}

								writefile("VexHub/Settings.vex", JSon:Encode(SettingsTable))
							else
								MakeVexFolder()
							end
						end)()

						coroutine.wrap(function()
							if isfile("VexHub/Favorites.vex") then
								local FavoritesTable = {}
								for _, ScriptId in Favorites do
									table.insert(FavoritesTable, tonumber(ScriptId))
								end
								wait()
	
								writefile("VexHub/Favorites.vex", JSon:Encode(FavoritesTable))
							else
								MakeVexFolder()
							end
						end)()

						coroutine.wrap(function()
							if isfolder("VexHub/SavedScripts") then
								for TableNumber, _ in SavedScripts do
									writefile("VexHub/SavedScripts/"..SavedScripts[TableNumber].ScriptName..".lua", tostring(SavedScripts[TableNumber].Script))
								end
							else
								MakeVexFolder()
							end
						end)()
					else
						MakeVexFolder()
						SaveVexFile()
					end
				end)

				if Success then
					Message:Success("Table saved!")
				else
					Message:Visible(true)
					Message:Error("Failed to save table! Your settings was not saved!")
					Message:Error(Error)
				end
			end
		end)

		LoadVexFile()

		local Table = _G.Table
		local AnimationSpeed = Table.GuiSettings.AnimationSpeed
		local AnimationEasingStyle = Table.GuiSettings.EasingStyle
		Message:Output("Loading CoreFrame...")
		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/CoreFrame"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Loading AnimationLibrary...")
		local AnimationLibrary = nil
		local Success, Error = pcall(function()
			AnimationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/AnimationLibrary"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Loading Home...")

		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/Home"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Loading Tabs...")
		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/TabsLoader"))()
		end)

		CheckIfSuccess(Success, Error)

		wait()
		Message:Output("Loading LocalPlayer...")

		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/LocalPlayer"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Loading LoadString...")
		local Success, Error = pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/LoadString"))()
		end)

		CheckIfSuccess(Success, Error)

		Message:Output("Loading Plugins...")
		local Success, Error = pcall(function()

			getgenv().CreateNewVexPlugin = function(PluginTable)
				function ReturnIdAsImage(Id)
					local Success, Error = pcall(function() 
						if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 0 then end
					end)
			
					if Success then
						if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 13 then
					       		return "https://www.roblox.com/asset-thumbnail/image?assetId="..Id.."&width=420&height=420&format=png"
					   	elseif game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 1 then
							return "rbxassetid://"..Id
						end
					end
				end
			
				local Template = PluginsTemplate:Clone()
			
				Template.Name = "Plugin_"..PluginTable.PluginName
				Template.Parent = game:GetService("CoreGui"):WaitForChild("VexHubFolder").VexHubScreenGui.BackFrame.Wallpaper.MainFrame.WholeFrame.Pages
				Template.SectionInfo.ImageLabel.Image = ReturnIdAsImage(tonumber(PluginTable.PluginLogo))
				Template.SectionInfo.SectionName.Text = PluginTable.PluginName
				Template.BottomFrame.LeftFrame.Scripts.ScrollingFrame.ScriptButtonTemplate.Image = ReturnIdAsImage(tonumber(PluginTable.PluginLogo))
			
				Template.BottomFrame.LeftFrame.SearchFrame.SearchButton.MouseButton1Down:Connect(function()
					pcall(ClickSound)
					for _, Button in Template.BottomFrame.LeftFrame.Scripts.ScrollingFrame:GetChildren() do
						if Button:IsA("ImageButton") then
							local SearchingFor = string.lower(Template.BottomFrame.LeftFrame.SearchFrame.TextBoxParent.TextBox.Text)
							local ButtonName = string.lower(Button.ScriptName.Text)
			
							if SearchingFor == "" and Button.Name ~= "ScriptButtonTemplate" then
								Button.Visible = true
							else
								if string.find(ButtonName, SearchingFor) and SearchingFor ~= "" and Button.Name ~= "ScriptButtonTemplate" then
									Button.Visible = true
								else
									Button.Visible = false
								end
							end
						end
					end
				end)
			
				local PluginTabButton = game:GetService("CoreGui"):WaitForChild("VexHubFolder").VexHubScreenGui.BackFrame.Wallpaper.MainFrame.WholeFrame.Tabs.ScrollingFrame.Plugins:Clone()
			
				PluginTabButton.Name = "Plugin_"..PluginTable.PluginName
				PluginTabButton.Parent = game:GetService("CoreGui"):WaitForChild("VexHubFolder").VexHubScreenGui.BackFrame.Wallpaper.MainFrame.WholeFrame.Tabs.ScrollingFrame
				PluginTabButton.LayoutOrder = 22
				PluginTabButton.TabName.Text = PluginTable.PluginName
				PluginTabButton.TabImage.Image = ReturnIdAsImage(PluginTable.PluginLogo)
				PluginTabButton.MouseButton1Down:Connect(function()
					if Table.GuiStatus.ActivePage ~= "Plugin_"..PluginTable.PluginName and Table.GuiStatus.OnGoingAnimation == false then
						Table.GuiStatus.OnGoingAnimation = true
						AnimationLibrary.DisappearTab(Table.GuiStatus.ActivePage)
						wait(Table.GuiSettings.AnimationSpeed)
						ResetStatus(Table.GuiStatus.ActivePage)
						AnimationLibrary.AppearTab("Plugin_"..PluginTable.PluginName)
						wait(Table.GuiSettings.AnimationSpeed)
						Table.GuiStatus.OnGoingAnimation = false
						Table.GuiStatus.ActivePage = "Plugin_"..PluginTable.PluginName
					end
				end)
			
				Template.BottomFrame.ScriptInfo.BottomFrame.Execute.MouseButton1Down:Connect(function()
					pcall(ClickSound)
					pcall(Table.GuiStatus.ActiveScript)
				end)
			
				Template.BottomFrame.ScriptInfo.BottomFrame.Play.MouseButton1Down:Connect(function()
					pcall(ClickSound)
					pcall(Table.GuiStatus.JoinGameFunction)
				end)
			
				for ScriptName, _ in PluginTable.Scripts do
					local ScriptTable = {
						Owner = PluginTable.Scripts[ScriptName].Owner,
						Description = PluginTable.Scripts[ScriptName].Description,
						GameId = PluginTable.Scripts[ScriptName].GameId,
						RigType = PluginTable.Scripts[ScriptName].RigType,
						Script = PluginTable.Scripts[ScriptName].Script,
					}
			
					local ScriptTemplate = Template.BottomFrame.LeftFrame.Scripts.ScrollingFrame.ScriptButtonTemplate:Clone()
			
					ScriptTemplate.Name = ScriptName
					ScriptTemplate.Parent = Template.BottomFrame.LeftFrame.Scripts.ScrollingFrame
					ScriptTemplate.Visible = true
					ScriptTemplate.ScriptName.Text = ScriptName
			
					function GetGameName(GameId)
						if GameId == 0 then
							return "Universal"
						else
							return game:GetService("MarketplaceService"):GetProductInfo(GameId).Name
						end
					end
			
					function ReturnRigType(RigType)
						if RigType == "Any" or Player.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType[RigType] then
							return true
						else
							return false
						end
					end
			
					function ReturnIfGameSupported(GameId)
						if GameId == 0 or game.PlaceId == GameId then
							return true
						else
							return false
						end
					end
			
					ScriptTemplate.MouseButton1Down:Connect(function()
						Template.BottomFrame.ScriptInfo.ScriptDetails.Text = '<b><font size="14">'..ScriptName..'</font></b>\n<font size="8">By: '..ScriptTable.Owner..'</font>\n\n<b><font size="10">Description:</font></b>\n<font size="8">' ..ScriptTable.Description.. '</font>\n\n<font size="8">RigType: <b>' ..ScriptTable.RigType.. '</b>\nGame: <b>'.. GetGameName(tonumber(ScriptTable.GameId)) ..'</b></font>'
				
						Table.GuiStatus.ActiveScript = function()
							if ReturnIfGameSupported(tonumber(ScriptTable.GameId)) == true then
								if ReturnRigType(ScriptTable.RigType) == true then
									Notification:Create("Executed!", "The script was executed. Waiting for respond.", 5)
									local Responded = false
									local Success, Error = pcall(ScriptTable.Script)
				
									if Success then
										Notification:Create("No errors!", "This script runned with no errors!", 5)
										Responded = true
									else
										Notification:Create("Error!", Error, 5)
										Responded = true
									end
				
									wait(7)
									if Responded == false then
										Notification:Create("No respond!", "The script did not responded for a long time.", 5)
									end
								else
									Notification:Create("Whoops", "Youre not "..ScriptTable.RigType.."!", 5)
								end
							else
								Notification:Create("Whoops", "Youre not in "..GetGameName(tonumber(ScriptTable.GameId))..". Join the green play button to join the game!", 5)
							end
						end
				
						Table.GuiStatus.JoinGameFunction = function()
							if GetGameName(tonumber(ScriptTable.GameId)) == "Universal" then
								Notification:Create("Whoops", "This script is universal! This script works on any games!", 5)
							elseif game.PlaceId == tonumber(ScriptTable.GameId) then
								Notification:Create("Whoops", "Youre already in the game!", 5)
							elseif game.PlaceId ~= tonumber(ScriptTable.GameId) then
								Notification:Create("Teleporting...", "Teleporting you to "..GetGameName(tonumber(ScriptTable.GameId)).." in just a second...", 5)
								local Teleported = false
				
								local Success, Error = pcall(function()
									game:GetService("TeleportService"):Teleport(tonumber(ScriptTable.GameId))
									wait()
									Teleported = true
								end)
				
								wait(7)
								if not Success then
									Notification:Create("Failed to teleport!", Error, 5)
								elseif Teleported == false then
									Notification:Create("TeleportService is slow!", "This might take a while.", 5)
								end
							end
						end
					end)
			  	end
			end

			coroutine.wrap(function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/Plugins"))()
			end)()

			coroutine.wrap(function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/PluginsLoader"))()
			end)()
		end)

		CheckIfSuccess(Success, Error)

		if Errors == 0 then
			Message:Success("VexHub loaded!")

			AnimationLibrary.AppearBackground()
			AnimationLibrary.AppearCoreInteractions()
			wait(Table.GuiSettings.AnimationSpeed)
			Message:Visible(false)
			AnimationLibrary.AppearTab("Home")
			Table.GuiStatus.ActivePage = "Home"
			Table.GuiStatus.IsVisible = true
			local OpenButton = game:GetService("CoreGui").VexHubFolder.VexHubScreenGui.TopFrame.OpenButton
			OpenButton.Visible = true
			TweenService:Create(OpenButton, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {BackgroundTransparency = 0.5}):Play()
			TweenService:Create(OpenButton.UIScale, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {Scale = 1}):Play()
			TweenService:Create(OpenButton.UIStroke, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {Transparency = 0.7}):Play()
			TweenService:Create(OpenButton.Logo, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {ImageTransparency = 0}):Play()
		else
			Message:Error('FAILED TO LOAD VEXHUB!\n\nPLEASE REPORT THIS TO THE SERVER AT <font color="rgb(76, 188, 255)">https://dsc.gg/vhub</font> ASAP!')
		end
	end
end
wait()

if Authorized == false then
	Player:Kick("\nYou are unauthorized to use this script!")
end
