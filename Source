local Usernames = loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/Access/VexHub/Usernames"))()
local Player = game:GetService("Players").LocalPlayer
local Authorized = false
local Message = loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/On-Discord/Created/VexConsole"))()
Message:Visible(true)

local function CheckIfSuccess(Success, Error)
  if Success then
    Message:Success("Loaded!")
  else
    Message:Error("Something went wrong while executing VexHub!")
    Message:Error(Error)
  end
end

for Names, _ in Usernames do
  if Player.Name == Names then
    Authorized = true
    local TweenService = game:GetService("TweenService")
    Message:Output("Loading Table...")
    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/Table"))()
    end)

    CheckIfSuccess(Success, Error)

    getgenv().LoadVexFile = function()
    	local JSon = {}
    	local GuiSettings = getgenv().Table.GuiSettings
    	local Plugins = getgenv().Table.Plugins
    	local SavedScripts = getgenv().Table.SavedScripts
    
    	function JSon:Encode(Table)
    		return game:GetService("HttpService"):JSONEncode(Table)
    	end
    
    	function JSon:Decode(Table)
    		return game:GetService("HttpService"):JSONDecode(Table)
    	end
    
    	if isfolder("VexHub") then
    		coroutine.wrap(function()
    			if isfile("VexHub/Settings.vex") then
    				local SettingsTable = JSon:Encode(readfile("VexHub/Settings.vex"))
    
    				GuiSettings.Wallpaper = SettingsTable.Wallpaper
    				GuiSettings.Notifications = SettingsTable.Notifications
    				GuiSettings.GuiBackgroundColor = SettingsTable.GuiBackgroundColor
    				GuiSettings.GuiScale = SettingsTable.GuiScale
    				GuiSettings.AnimationSpeed = SettingsTable.AnimationSpeed
    				GuiSettings.EasingStyle = SettingsTable.EasingStyle
    				GuiSettings.GuiFont.Regular = SettingsTable.GuiFont.Regular
    				GuiSettings.GuiFont.Medium = SettingsTable.GuiFont.Medium
    				GuiSettings.GuiFont.Bold = SettingsTable.GuiFont.Bold
    				GuiSettings.BackgroundGradientColor = SettingsTable.BackgroundGradientColor
    				GuiSettings.UIStrokeColor = SettingsTable.UIStrokeColor
    				GuiSettings.NotificationSound = SettingsTable.NotificationSound
    				GuiSettings.NotificationVolume = SettingsTable.NotificationVolume
    			else
    				local SettingsTable = {
    					Wallpaper = 11926598891,
    					Notifications = true,
    					GuiBackgroundColor = "255, 255, 255",
    					GuiScale = 1,
    					AnimationSpeed = 0.6,
    					EasingStyle = "Quart",
    					GuiFont = {
    						Regular = "Montserrat",
    						Medium = "MontserratMedium",
    						Bold = "MontserratBold",
    					},
    					BackgroundGradientColor = "200, 200, 200",
    					UIStrokeColor = "255, 255, 255",
    					NotificationSound = 3398620867,
    					NotificationVolume = 0.5,
    				}
    
    				writefile("VexHub/Settings.vex", JSon:Decode(SettingsTable))
    			end
    		end)()
    
    		coroutine.wrap(function()
    			if isfolder("VexHub/Plugins") then
    				for _, PluginName in listfiles("VexHub/Plugins") do
    					if string.find(string.lower(tostring(PluginName)), ".vexp") then
    						table.insert(Plugins, tostring(readfile(PluginName)))
    					end
    				end
    			else
    				makefolder("VexHub/Plugins")
    			end
    		end)
    
    		coroutine.wrap(function()
    			if isfolder("VexHub/SavedScripts") then
    				for _, PluginName in listfiles("VexHub/SavedScripts") do
    					if string.find(string.lower(tostring(PluginName)), ".lua") then
    						table.insert(SavedScripts, tostring(readfile(PluginName)))
    					end
    				end
    			else
    				makefolder("VexHub/SavedScripts")
    			end
    		end)
    	else
    		makefolder("VexHub")
    		LoadFile()
    	end
    end

    LoadVexFile()

    local Table = getgenv().Table
    local AnimationSpeed = Table.GuiSettings.AnimationSpeed
    local AnimationEasingStyle = Table.GuiSettings.EasingStyle
    Message:Output("Loading CoreFrame...")
    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/CoreFrame"))()
    end)

    CheckIfSuccess(Success, Error)

    Message:Output("Loading AnimationLibrary...")
    local AnimationLibrary = nil
    local Success, Error = pcall(function()
    AnimationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/AnimationLibrary"))()
    end)

    CheckIfSuccess(Success, Error)

    Message:Output("Loading Home...")

    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/Home"))()
    end)

    CheckIfSuccess(Success, Error)

    Message:Output("Loading Tabs...")
    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/TabsLoader"))()
    end)

    CheckIfSuccess(Success, Error)

    wait()
    Message:Output("Loading LocalPlayer...")

    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/LocalPlayer"))()
    end)

    CheckIfSuccess(Success, Error)

    Message:Output("Loading LoadString...")
    local Success, Error = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/LoadString"))()
    end)

    CheckIfSuccess(Success, Error)

    Message:Success("VexHub loaded!")
    AnimationLibrary.AppearBackground()
    AnimationLibrary.AppearCoreInteractions()
    wait(Table.GuiSettings.AnimationSpeed)
    Message:Visible(false)
    AnimationLibrary.AppearTab("Home")
    Table.GuiStatus.ActivePage = "Home"
    Table.GuiStatus.IsVisible = true
    local OpenButton = game:GetService("CoreGui").VexHubFolder.VexHubScreenGui.TopFrame.OpenButton
    OpenButton.Visible = true
    TweenService:Create(OpenButton, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {BackgroundTransparency = 0.5}):Play()
    TweenService:Create(OpenButton.UIScale, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {Scale = 1}):Play()
    TweenService:Create(OpenButton.UIStroke, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {Transparency = 0.7}):Play()
    TweenService:Create(OpenButton.Logo, TweenInfo.new(AnimationSpeed, Enum.EasingStyle[AnimationEasingStyle]), {ImageTransparency = 0}):Play()
  end
end
wait()

if Authorized == false then
  Player:Kick("\nYou are unauthorized to use this script!")
end
